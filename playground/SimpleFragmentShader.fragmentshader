#version 330 core

// Ouput data
layout(location=0) out vec4 fragColor;

//input data


in vec3 fColor;
in vec3 fNormal;
in vec3 fCameraPos;
in vec3 fLightDir;
in vec4 fPosition;

void main()
{
    vec3 ambientcol = vec3(0.0, 1.0, 0.0);
    float ambientLightFactor = 0.2;
	
	 // Output color = red
    float dotProduct = dot(fNormal, fLightDir);
    vec3 lightedCol = vec3(fColor.x - dotProduct, fColor.y - dotProduct, fColor.z - dotProduct);

    vec3 cameraToFrag = vec3(fCameraPos.x - fPosition.x, fCameraPos.y - fPosition.y, fCameraPos.z - fPosition.z);
    vec3 cameraToFragN = normalize(cameraToFrag);

    float outlineDotProduct = dot(cameraToFragN, fNormal);
    
    //vec3 outlineCol = vec3(1.0, 0.0, 0.0);



    outlineDotProduct = 1.0f;
    /*
    if(outlineDotProduct > 0.3)ss
        outlineDotProduct = 1.0;
    else
        outlineDotProduct = 0.0;*/

    fragColor = vec4((1- ambientLightFactor) * lightedCol * 0.3 + ambientLightFactor * ambientcol, 1);

    //fragColor = vec4(lightedCol, 1);

}